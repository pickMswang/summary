什么是死锁
死锁是指多个进程因竞争资源而造成的一种僵局（互相等待），
若无外力作用，这些进程都将无法向前推进
。例如，在某一个计算机系统中只有一台打印机和一台输入 设备，进程P1正占用输入设备
，同时又提出使用打印机的请求，但此时打印机正被进程P2 所占用，
而P2在未释放打印机之前，又提出请求使用正被P1占用着的输入设备。
这样两个进程相互无休止地等待下去，均无法继续执行，此时两个进程陷入死锁状态。
死锁产生的原因
1. 系统资源的竞争
系统资源的竞争导致系统资源不足，以及资源分配不当，导致死锁。
2. 进程运行推进顺序不合适
进程在运行过程中，请求和释放资源的顺序不当，会导致死锁。
产生死锁的四个必要条件：
互斥条件：

一个资源每次只能被一个进程使用，即在一段时间内某 资源仅为一个进程所占有。
此时若有其他进程请求该资源，则请求进程只能等待。

请求与保持条件：

进程已经保持了至少一个资源，但又提出了新的资源请求，而该资源 已被其他进程占有，此时请求进程被阻塞，
但对自己已获得的资源保持不放。

不可剥夺条件:

进程所获得的资源在未使用完毕之前，不能被其他进程强行夺走，即只能 由获得该资源的进程自己来释放（只能是主动释放)。

循环等待条件: 

若干进程间形成首尾相接循环等待资源的关系
这四个条件是死锁的必要条件，只要系统发生死锁，这些条件必然成立，而只要上述条件之一不满足，就不会发生死锁。
死锁的避免与预防：

死锁避免和死锁预防的区别：
死锁预防是设法至少破坏产生死锁的四个必要条件之一
严格的防止死锁的出现,而死锁避免则不那么严格的限制产生死锁的必要条件的存在,因为即使死锁的必要条件存在,也不一定发生死锁。
死锁避免是在系统运行过程中注意避免死锁的最终发生。
