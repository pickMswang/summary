大型分布式服务器架构原理解析

第一阶段：
初始阶段的网站架构  

一台服务器就够了  应用程序，数据库，文件等所有资源在一个服务器上

第二阶段：
应用服务和数据服务分离

需要三台服务器 
应用服务器：需要强大的CPU
数据库服务器：对磁盘读写操作很多，需要更快的磁盘和更大的内存
文件服务器：存储用户上传的文件，需要更大的磁盘空间

第三阶段：
使用缓存改善网站性能
一个网站往往80%的业务访问集中在20%的数据上，所以先把这一小部分数据
提前缓存下来不需要每次从数据库中提取减少数据库的访问压力
缓存分为缓存到
应用服务器： 自己的访问速度快很多，但受自身内存的限制，往往不太实用
远程分布式缓存使用一个集群专门负责缓存服务，当内存不够时还可以轻松的扩容


第四阶段：
使用应用服务器集群改善网站的并发处理能力
单一应用服务器能够处理的请求连接时有限的，在网站访问高峰期，应用服务器就成了
整个网站的瓶颈，
使用分布式集群是网站解决高并发，海量数据的常用手段
只要能通过增加一台服务器的方式改善负载压力，就可以以同样的方式持续增加服务器
不断改善系统性能，从而实现系统的可伸缩性
通过负载均衡调度服务器，将来自用户浏览器的访问请求分发到应用服务器集群中的
任意一个服务器上，


第五阶段： 
数据库读写分离
应用服务器在写数据的时候，访问主数据库，主数据库通过主从复制机制将数据
更新同步到从数据库，这样当应用服务器在读数据的时候，就可以通过从服务器获取数据
为了便于应用程访问读写分离的数据库，通常在应用服务器端使用专门的数据访问模块
使数据库读写分离对应用透明。


第六阶段：
使用反向代理和CDN加速网站响应
网站访问延时和用户流失率正相关 网站需要加速网站访问速度 使用CDN和反向代理


第七阶段：
使用分布式文件系统和分布式数据库系统
在单表数据规模庞大的时候才使用
数据库拆分手段业务分库将不同的业务的数据部署在不同的物理服务器上

第八阶段：
使用NoSQL和搜索引擎
采用一些非关系数据库技术如NoSQL和非数据库查询技术如搜索引擎
NOSQL和搜索引擎都是源自互联网的技术手段对可伸缩的分布式特性具有更好的支持
应用服务器通过一个统一的数据访问模块访问各种数据


第九阶段：
业务拆分
分而治之的手段
应用之间可以通过一个超链接建立关系也可以通过消息队列进行数据分发
最多的是通过访问同一个数据存储系统来构成一个关联的完整系统


第十阶段
分布式服务

每一个应用系统都需要执行许多相同的业务操作，可以将这些共用的业务提取出来
独立部署，由这些可复用的业务连接数据库提供共用业务服务，而应用系统只需要管理
用户界面，通过分布式服务调用共用业务服务完成具体业务操作















































